/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head == null)
            return false;
        if(head.next == null)
            return false;
        if(head.next.next== null)
            return false;
        ListNode i=head;
        ListNode j=head;
        int temp=0;
        i=i.next;
        j=j.next.next;
        while( i != null && j != null && j.next != null )
        {
            if(i == j)
            {
                temp=1;
                break;
            }
            i=i.next;
            j=j.next.next;

        }
        if(temp == 1)
            return true;
        return false;
    }
}
