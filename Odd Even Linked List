/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head == null || (head.next == null || head.next.next == null))
            return head;
        ListNode temp =  head;
        int count = 0;
        ListNode last;
        while(temp.next.next != null)
        {
            count++;
            temp=temp.next;
    
        }
        last=temp;
        temp=temp.next;
         ListNode f = temp;
        count=count+2;
        ListNode temp1 = head;
        if(count%2 == 0)
        {
       for(int i=0;i<(count/2)-1;i++)
       {
    
           
            ListNode store = temp1.next;
            temp1.next=temp1.next.next;
           temp1=temp1.next;
            store.next=last.next;
            last.next=store;
            last=last.next;
        }
        }
        else
        {
            for(int i=0;i<count/2;i++)
       { 
                 ListNode store = temp1.next;
            temp1.next=temp1.next.next;
           temp1=temp1.next;
            temp.next=store;
            store.next=null;
            temp=temp.next;
            
        }
        }
        return head;
    }
}
